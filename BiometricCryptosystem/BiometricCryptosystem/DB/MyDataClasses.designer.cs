#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiometricCryptosystem.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Biometric Cryptosystem")]
	public partial class MyDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblUserInfo(tblUserInfo instance);
    partial void UpdatetblUserInfo(tblUserInfo instance);
    partial void DeletetblUserInfo(tblUserInfo instance);
    #endregion
		
		public MyDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Biometric_CryptosystemConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblUserInfo> tblUserInfos
		{
			get
			{
				return this.GetTable<tblUserInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserInfo")]
	public partial class tblUserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Data.Linq.Binary _EnrollFace;
		
		private System.Data.Linq.Binary _BinaryMap;
		
		private System.Data.Linq.Binary _LoginFace;
		
		private string _Features;
		
		private string _PassKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEnrollFaceChanging(System.Data.Linq.Binary value);
    partial void OnEnrollFaceChanged();
    partial void OnBinaryMapChanging(System.Data.Linq.Binary value);
    partial void OnBinaryMapChanged();
    partial void OnLoginFaceChanging(System.Data.Linq.Binary value);
    partial void OnLoginFaceChanged();
    partial void OnFeaturesChanging(string value);
    partial void OnFeaturesChanged();
    partial void OnPassKeyChanging(string value);
    partial void OnPassKeyChanged();
    #endregion
		
		public tblUserInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrollFace", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EnrollFace
		{
			get
			{
				return this._EnrollFace;
			}
			set
			{
				if ((this._EnrollFace != value))
				{
					this.OnEnrollFaceChanging(value);
					this.SendPropertyChanging();
					this._EnrollFace = value;
					this.SendPropertyChanged("EnrollFace");
					this.OnEnrollFaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinaryMap", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BinaryMap
		{
			get
			{
				return this._BinaryMap;
			}
			set
			{
				if ((this._BinaryMap != value))
				{
					this.OnBinaryMapChanging(value);
					this.SendPropertyChanging();
					this._BinaryMap = value;
					this.SendPropertyChanged("BinaryMap");
					this.OnBinaryMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginFace", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LoginFace
		{
			get
			{
				return this._LoginFace;
			}
			set
			{
				if ((this._LoginFace != value))
				{
					this.OnLoginFaceChanging(value);
					this.SendPropertyChanging();
					this._LoginFace = value;
					this.SendPropertyChanged("LoginFace");
					this.OnLoginFaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Features", DbType="NVarChar(MAX)")]
		public string Features
		{
			get
			{
				return this._Features;
			}
			set
			{
				if ((this._Features != value))
				{
					this.OnFeaturesChanging(value);
					this.SendPropertyChanging();
					this._Features = value;
					this.SendPropertyChanged("Features");
					this.OnFeaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassKey", DbType="NVarChar(500)")]
		public string PassKey
		{
			get
			{
				return this._PassKey;
			}
			set
			{
				if ((this._PassKey != value))
				{
					this.OnPassKeyChanging(value);
					this.SendPropertyChanging();
					this._PassKey = value;
					this.SendPropertyChanged("PassKey");
					this.OnPassKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
